[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = True

# Keystone role for heat template-defined users
heat_stack_user_role = heat_stack_user

# Make instances connect to the heat services via https
# default to off since it will require images and host
# to be configured correctly to support ssl connections
instance_connection_is_secure = 0

# If is_secure is set to 1, certificate validation can
# be enabled or disabled
instance_connection_https_validate_certificates = 1

# URL for instances to connect for metadata
# ie the IP of the bridge device connecting the
# instances with the host and the bind_port of
# the CFN API
# NOTE : change this from 127.0.0.1 !!
heat_metadata_server_url = http://127.0.0.1:8000

# URL for instances to connect for notification
# of waitcondition events (ie via cfn-signal)
# e.g the IP of the bridge device connecting the
# instances with the host and the bind_port of
# the CFN API
# NOTE : change this from 127.0.0.1 !!
heat_waitcondition_server_url = http://127.0.0.1:8000/v1/waitcondition

# URL for instances to connect for publishing metric
# data (ie via cfn-push-stats)
# e.g the IP of the bridge device connecting the
# instances with the host and the bind_port of
# the heat-api-cloudwatch API
# NOTE : change this from 127.0.0.1 !!
heat_watch_server_url = http://127.0.0.1:8003

# Log to this file. Make sure the user running heat-api has
# permissions to write to this file!
log_file = /var/log/heat/engine.log

# ================= Syslog Options ============================

# Send logs to syslog (/dev/log) instead of to file specified
# by `log_file`
use_syslog = False

# Facility to use. If unset defaults to LOG_USER.
# syslog_log_facility = LOG_LOCAL0

# The namespace for the custom backend. Must provide class Clients which will be
# imported. Defaults to OpenStack if none provided.
# cloud_backend=deltacloud_heat.client

sql_connection = mysql://heat:heat@localhost/heat

db_backend=heat.db.sqlalchemy.api

rpc_backend=heat.openstack.common.rpc.impl_qpid

auth_encryption_key=%ENCRYPTION_KEY%
